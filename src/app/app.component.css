.wrapper {
    width: 100vw;
    height: 100vh;
    display: flex;
    flex-direction: row;
}

.canvases {
    width: 75vw;
    height: inherit;
}

#webgl-canvas,
#css-canvas {
    /* avoid scrollbars */
    width: calc(75vw - .2em);
    height: calc(100vh - .2em);
}

#css-canvas {
    position: absolute;
    top: 0em;
    z-index: -999;
}

.gui {
    position: relative;
    z-index: 1000;
    padding: 1em;
    width: 25vw;
    height: inherit;
    box-sizing: border-box;
    border-right: 2px dashed #f3f3f3;
}

.categories {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
}

.category-legend {
    position: absolute;
    top: 1em;
    width: 100vw;
    margin: auto;
    z-index: 999;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-content: center;
}

.category-wrapper {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-content: center;
}

.category-wrapper > div {
    margin: .25em;
}

.category-wrapper > div > span {
    cursor: pointer;
    border-radius: 5px;
    height: 20px;
    width: 20px;
}

.error {
    position: absolute !important; 
    bottom: 0em;
    max-width: 512px;
    margin: 0.5em;
    z-index: 1000;
}

.error p {
    word-break: break-word;
}

.pc-tooltip {
    position: absolute;
    opacity: 0;
    width: 250px;
    height: auto;
    background-color: white;
    padding: 25px;
    border-radius: 5px;
    top: 0;
    left: 0;
    transition: all 0.25s ease-in-out;
}

.preview-item {
    margin-top: 2em;
    max-width: calc(25vw - 2em);
}

.preview-title {
    color: gray;
}
.preview-picture {
    max-width: inherit;
}
.preview-metainfo {
    font-style: italic;
    font-size: 18px;
    color: gray;
}
.preview-description {
    text-align: justify;
    font-style: italic;
}

::ng-deep .time-slice-label {
    opacity: 1;
    transition: all 0.25s ease-in-out;
}

.btn-group-xs > .btn, .btn-xs {
    padding  : .25rem .4rem;
    font-size  : .875rem;
    line-height  : .5;
    border-radius : .2rem;
}

::ng-deep .animateButton,
::ng-deep .animateButton text {
    cursor: pointer;
}


/*DAT GUI*/
::ng-deep .dg.ac {
    z-index: 1000 !important;
}

/*MODAL CSS*/
.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    padding-top: 100px; /* Location of the box */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.9); /* Black w/ opacity */
  }
  
  /* Modal Content (Image) */
  .modal-content {
    margin: auto;
    display: block;
    width: auto !important;
    max-width: 100%;
    max-height: 80%;
  }
  
  /* Caption of Modal Image (Image Text) - Same Width as the Image */
  #caption {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
    text-align: center;
    color: #ccc;
    padding: 10px 0;
    height: 150px;
  }
  
  /* Add Animation - Zoom in the Modal */
  .modal-content, #caption { 
    animation-name: zoom;
    animation-duration: 0.6s;
  }
  
  @keyframes zoom {
    from {transform:scale(0)} 
    to {transform:scale(1)}
  }
  
  /* The Close Button */
  .close {
    position: absolute;
    top: 15px;
    right: 35px;
    color: #f1f1f1 !important;
    font-size: 40px;
    font-weight: bold;
    transition: 0.3s;
  }
  
  .close:hover,
  .close:focus {
    color: #bbb;
    text-decoration: none;
    cursor: pointer;
  }
  
  /* 100% Image Width on Smaller Screens */
  @media only screen and (max-width: 700px){
    .modal-content {
      width: 100%;
    }
  }

/* Processing spinner */
.processing-change {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 25%;
    height: 25%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-content: center;
    align-items: center;
    transform: translate(-50%, -50%);
    background-color: #000;
    opacity: .5;
    border-radius: .25rem;
    z-index: 1000;
}

.processing-change p {
    color: white;
}